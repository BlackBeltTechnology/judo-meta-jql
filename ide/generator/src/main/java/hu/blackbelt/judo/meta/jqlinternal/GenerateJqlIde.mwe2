module hu.blackbelt.judo.meta.jqlinternal.GenerateJqlIde

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."
var modelDir = "model/model"
var javaGenPath = "model/src/main/xtext-gen"

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = JqlXtextProjectConfig {
			    mavenLayout = true
				baseName = "model"
				rootPath = rootPath
				runtimeTest = {
					enabled = false
				}
				eclipsePlugin = {
					enabled = true
					name = "hu.blackbelt.judo.meta.jql.ide.ui"		
					root = "${rootPath}/ide/ui"					
				}
				eclipsePluginTest = {
					enabled = false
				}
				web = {
					enabled = false
				}
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "hu.blackbelt.judo.meta.jql.JqlDsl"
			fileExtensions = "jql"

            parserGenerator = {
                options = {
                    ignoreCase = true
                }
            }
            
            scopeProvider = {
                ignoreCase = true
            }

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			junitSupport = {
				junitVersion = "5"
			}
		}
	}

		// Helper for model
	component = hu.blackbelt.eclipse.emf.genmodel.generator.helper.HelperGeneratorWorkflow {
		modelDir = "${rootPath}/${modelDir}"
		javaGenPath = "${rootPath}/${javaGenPath}"
	}

	// Builder for model
	component = hu.blackbelt.eclipse.emf.genmodel.generator.builder.BuilderGeneratorWorkflow {
		modelDir = "${rootPath}/${modelDir}"
		javaGenPath = "${rootPath}/${javaGenPath}"
	}	

	// Judo RuntimeModel for model
	component = hu.blackbelt.judo.eclipse.emf.genmodel.generator.runtimemodel.RuntimeModelGeneratorWorkflow {
		modelDir = "${rootPath}/${modelDir}"
		javaGenPath = "${rootPath}/${javaGenPath}"
	}
}
