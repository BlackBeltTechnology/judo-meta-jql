module hu.blackbelt.judo.meta.jqlinternal.GenerateJqlIde

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."
var modelDir = "model/model"
var javaGenPath = "model/src/main/xtext-gen"

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = JqlXtextProjectConfig {
			    mavenLayout = true
				baseName = "model"
				rootPath = rootPath
				runtimeTest = {
					enabled = false
				}
				eclipsePlugin = {
					enabled = true
					name = "hu.blackbelt.judo.meta.jql.ide.ui"		
					root = "${rootPath}/ide/ui"					
				}
				eclipsePluginTest = {
					enabled = false
				}
				web = {
					enabled = false
				}
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		// Customization of generator, see org.eclipse.xtext.xtext.generator.StandardLanguage class for standard elements
		language = XtextGeneratorLanguage {
			name = "hu.blackbelt.judo.meta.jql.JqlDsl"
			fileExtensions = "jql"

            fragment = grammarAccess.GrammarAccessFragment2 {}
            fragment = ecore.EMFGeneratorFragment2 {}
            fragment = serializer.SerializerFragment2 {
                generateStub = false
            }
            fragment = resourceFactory.ResourceFactoryFragment2 {}
            fragment = parser.antlr.XtextAntlrGeneratorFragment2 {
                options = { 
                    ignoreCase = true
                }
            }
            fragment = validation.ValidatorFragment2 {}
            fragment = builder.BuilderIntegrationFragment2 {}
            fragment = generator.GeneratorFragment2 {}
            fragment = formatting.Formatter2Fragment2 {}
            fragment = ui.labeling.LabelProviderFragment2 {}
            fragment = ui.outline.QuickOutlineFragment2 {}
            fragment = ui.outline.OutlineTreeProviderFragment2 {}
            fragment = ui.quickfix.QuickfixProviderFragment2 {}
            fragment = ui.contentAssist.ContentAssistFragment2 {}
			           		
		}
	}

}
